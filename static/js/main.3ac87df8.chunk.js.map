{"version":3,"sources":["img/rock.jpg","img/paper.png","img/scissors.png","app1.js","Header.js","ScoreChoice.js","serviceWorker.js","index.js"],"names":["module","exports","window","onload","userScore","compScore","userScore_span","document","getElementById","compScore_span","result_div","querySelector","fire_div","water_div","grass_div","game","userChoice","computerChoice","Math","floor","random","innerHTML","winWord","smallUserWord","fontsize","sub","smallCompWord","classList","add","setTimeout","remove","win","loseWord","lose","draw","addEventListener","Header","className","style","textAlign","href","role","id","type","value","onClick","location","reload","Score","src","require","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","URL","process","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3ac87df8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rock.927ee8f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/paper.2def3dfc.png\";","module.exports = __webpack_public_path__ + \"static/media/scissors.fae64281.png\";","window.onload = function() {\r\n  let userScore = 0;\r\n  let compScore = 0;\r\n\r\n  const userScore_span = document.getElementById(\"user-score\");\r\n  const compScore_span = document.getElementById(\"comp-score\");\r\n  const scoreBoard_div = document.querySelector(\".score-board\");\r\n  const result_div = document.querySelector(\".result > p\");\r\n  const fire_div = document.getElementById(\"Fire\");\r\n  const water_div = document.getElementById(\"Water\");\r\n  const grass_div = document.getElementById(\"Grass\");\r\n\r\n  // function to generate random computer choice\r\n  function getComputerChoice() {\r\n    const choices = [\"Fire\", \"Water\", \"Grass\"];\r\n    const randomNumber = Math.floor(Math.random() * 3);\r\n    var choicee = choices[randomNumber];\r\n    return choicee;\r\n  }\r\n\r\n  // win, lose, draw scenarios and actions\r\n  function win(userChoice, computerChoice) {\r\n    userScore++;\r\n    userScore_span.innerHTML = userScore;\r\n    compScore_span.innerHTML = compScore;\r\n    const smallUserWord = \"(user)\".fontsize(3).sub();\r\n    const smallCompWord = \"(comp)\".fontsize(3).sub();\r\n    var winWord;\r\n    if (userChoice === \"Fire\") {\r\n      winWord = \" burns \";\r\n    } else if (userChoice === \"Water\") {\r\n      winWord = \" puts out \";\r\n    } else if (userChoice === \"Grass\") {\r\n      winWord = \" absorbs \";\r\n    }\r\n    result_div.innerHTML =\r\n      userChoice +\r\n      smallUserWord +\r\n      winWord +\r\n      computerChoice +\r\n      smallCompWord +\r\n      \" , you win! \";\r\n    document.getElementById(userChoice).classList.add(\"green-glow\");\r\n    setTimeout(function() {\r\n      document.getElementById(userChoice).classList.remove(\"green-glow\");\r\n    }, 500);\r\n  }\r\n\r\n  function lose(userChoice, computerChoice) {\r\n    compScore++;\r\n    userScore_span.innerHTML = userScore;\r\n    compScore_span.innerHTML = compScore;\r\n    const smallUserWord = \"(user)\".fontsize(3).sub();\r\n    const smallCompWord = \"(comp)\".fontsize(3).sub();\r\n    var loseWord;\r\n    if (computerChoice === \"Fire\") {\r\n      loseWord = \" burns \";\r\n    } else if (computerChoice === \"Water\") {\r\n      loseWord = \" puts out \";\r\n    } else if (computerChoice === \"Grass\") {\r\n      loseWord = \" absorbs \";\r\n    }\r\n    result_div.innerHTML =\r\n      computerChoice +\r\n      smallCompWord +\r\n      loseWord +\r\n      userChoice +\r\n      smallUserWord +\r\n      \" , you lost! \";\r\n    document.getElementById(userChoice).classList.add(\"red-glow\");\r\n    setTimeout(function() {\r\n      document.getElementById(userChoice).classList.remove(\"red-glow\");\r\n    }, 500);\r\n  }\r\n\r\n  function draw(userChoice, computerChoice) {\r\n    userScore_span.innerHTML = userScore;\r\n    compScore_span.innerHTML = compScore;\r\n    const smallUserWord = \"(user)\".fontsize(3).sub();\r\n    const smallCompWord = \"(comp)\".fontsize(3).sub();\r\n    result_div.innerHTML =\r\n      userChoice +\r\n      smallUserWord +\r\n      \" Is the same as \" +\r\n      computerChoice +\r\n      smallCompWord +\r\n      \" , it's a draw. \";\r\n    document.getElementById(userChoice).classList.add(\"yellow-glow\");\r\n    setTimeout(function() {\r\n      document.getElementById(userChoice).classList.remove(\"yellow-glow\");\r\n    }, 500);\r\n  }\r\n\r\n  // game function\r\n  function game(userChoice) {\r\n    const computerChoice = getComputerChoice();\r\n    switch (userChoice + computerChoice) {\r\n      case \"FireGrass\":\r\n      case \"WaterFire\":\r\n      case \"GrassWater\":\r\n        win(userChoice, computerChoice);\r\n        break;\r\n      case \"FireWater\":\r\n      case \"WaterGrass\":\r\n      case \"GrassFire\":\r\n        lose(userChoice, computerChoice);\r\n        break;\r\n      case \"FireFire\":\r\n      case \"WaterWater\":\r\n      case \"GrassGrass\":\r\n        draw(userChoice, computerChoice);\r\n        break;\r\n    }\r\n  }\r\n\r\n  function main() {\r\n    fire_div.addEventListener(\"click\", function() {\r\n      game(\"Fire\");\r\n    });\r\n\r\n    water_div.addEventListener(\"click\", function() {\r\n      game(\"Water\");\r\n    });\r\n\r\n    grass_div.addEventListener(\"click\", function() {\r\n      game(\"Grass\");\r\n    });\r\n  }\r\n\r\n  main();\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\n\nfunction Header() {\n  return (\n    // Header\n    <header>\n      <div className=\"wrapper\" style={{ textAlign: \"center\" }}>\n        <a\n          href=\"https://leclos.github.io/jWeb/projects.html\"\n          className=\"btn btn-info\"\n          role=\"button\"\n          id=\"mybtn\"\n        >\n          Back to projects\n        </a>\n      </div>\n      <h1>Fire, Water, Grass</h1>\n      <p>This is a basic rock, paper, scissors, type game built in react</p>\n\n      {/* Refresh button */}\n      <input\n        type=\"button\"\n        value=\"Restart\"\n        onClick={() => window.location.reload(false)}\n        className=\"rb\"\n      />\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction Score() {\r\n  return (\r\n    //   Score Board\r\n    <div className=\"score\">\r\n      <div className=\"score-board\">\r\n        <div id=\"user-label\" className=\"badge\">\r\n          user\r\n        </div>\r\n        <div id=\"comp-label\" className=\"badge\">\r\n          comp\r\n        </div>\r\n        <span id=\"user-score\">0</span>\r\n        <span> : </span>\r\n        <span id=\"comp-score\">0</span>\r\n      </div>\r\n\r\n      {/* Choice section */}\r\n      <div className=\"result\">\r\n        <p className=\"action\">Select your choice</p>\r\n      </div>\r\n      <div className=\"choices\">\r\n        <div className=\"choice\" id=\"Fire\">\r\n          <img src={require(\"./img/rock.jpg\")} />\r\n        </div>\r\n        <div className=\"choice\" id=\"Water\">\r\n          <img src={require(\"./img/paper.png\")} />\r\n        </div>\r\n        <div className=\"choice\" id=\"Grass\">\r\n          <img src={require(\"./img/scissors.png\")} />\r\n        </div>\r\n      </div>\r\n      <p id=\"action-message\">Make your move</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Score;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport Header from \"./Header\";\nimport Score from \"./ScoreChoice\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport vanilla from \"./app1\";\n\nReactDOM.render(<Header />, document.getElementById(\"root\"));\nReactDOM.render(<Score />, document.getElementById(\"score\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}